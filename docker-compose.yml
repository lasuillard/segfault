# dev-only environment setup
version: '3.4'

volumes:
  postgres: {}
  redis: {}

networks:
  backend:
    driver: bridge

services:
  postgres:
    image: postgres
    environment:
      # database url will be: postgres://dbuser:9306@postgres:5432/segfault
      - POSTGRES_DB=segfault
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=9306
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - "5432:5432"
    restart: always

  redis:
    image: redis
    environment:
      # redis url will be: redis://localhost:6379
      - CLIENTHOST=django
      - CLIENTPORT=6380
      - MASTERHOST=django
      - MASTERPORT=6379
    volumes:
      - redis:/var/lib/redis/data
    networks:
      - backend
    ports:
      - "6379:6380"
    command: --port 6380
    restart: always

  daphne:
    build:
      context: ./django
      dockerfile: ../compose/django/Dockerfile.dev
    image: segfault:latest
    depends_on:
      - postgres
      - redis
    environment:
      # daphne will handle http and ws protocol both.
      # static files will be served also, by whitenoise.
      - DJANGO_SETTINGS_MODULE=core.settings.dev
      - DATABASE_URL=postgres://dbuser:9306@postgres:5432/segfault
      - REDIS_URL=redis://localhost:6379
      # nuxt front-end development environment
      - FRONTEND_HOST=localhost
      - FRONTEND_PORT=3000
    volumes:
      - ./django:/django
      - ./log:/var/log/daphne
    networks:
      - backend
    ports:
      - "8000:8000"
    command: >
      sh -c "/wait-for-it.sh postgres:5432 -t 10 &&
            python manage.py makemigrations &&
            python manage.py migrate &&
            daphne -b 0.0.0.0 -p 8000 core.asgi.dev:application --access-log /var/log/daphne/daphne.log -v2"
    restart: always
