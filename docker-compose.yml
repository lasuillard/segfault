version: '3.4'

x-common-variables: &network-configs
  # postgres
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432
  # redis
  REDIS_HOST: redis
  REDIS_PORT: 6380
  # uwsgi - HTTP handler
  UWSGI_HOST: uwsgi
  UWSGI_PORT: 8000
  # daphne - Web Socket handler
  DAPHNE_HOST: daphne
  DAPHNE_PORT: 8443
  # nginx
  NGINX_HOST: localhost
  NGINX_PORT: 80

x-common-variables: &django-settings
  DJANGO_SETTINGS_MODULE: segfault.settings.dev
  # database
  ## TODO: handle secrets in other ways
  DATABASE_HOST: postgres
  DATABASE_PORT: 5432
  DATABASE_NAME: segfault
  DATABASE_USERNAME: dbuser
  DATABASE_PASSWORD: 9306

volumes:
  postgres: {}
  redis: {}

networks:
  backend:
    driver: bridge

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=segfault
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=9306
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - "5432:5432"
    restart: always

  redis:
    image: redis
    environment:
      - CLIENTHOST=django
      - CLIENTPORT=6380
      - MASTERHOST=django
      - MASTERPORT=6379
    volumes:
      - redis:/var/lib/redis/data
    networks:
      - backend
    ports:
      - "6380:6380"
    command: --port 6380
    restart: always

  daphne:
    build:
      context: ./django
      dockerfile: ../compose/django/Dockerfile.dev
    image: segfault_django:latest
    depends_on:
      - postgres
      - redis
    environment:
      <<: *network-configs
      <<: *django-settings
    volumes:
      - ./django:/django
    networks:
      - backend
    ports:
      - "8443:8443"
    command: >
      sh -c "python manage.py migrate &&
            /wait-for-it.sh postgres:5432 -t 10 &&
            daphne -b 0.0.0.0 -p 8443 segfault.asgi:application"
    restart: always

  uwsgi:
    image: segfault_django:latest
    depends_on:
      - postgres
      - redis
    environment:
      <<: *network-configs
      <<: *django-settings
    volumes:
      - ./django:/django
      - ./uwsgi/log:/var/log/uwsgi
    networks:
      - backend
    ports:
      - "8000:8000"
    working_dir: /django/
    command: >
      sh -c "pip install uwsgi --default-timeout=100 &&
            python manage.py collectstatic --noinput &&
            mkdir -p /var/log/uwsgi &&
            uwsgi --http :8000 -w segfault.wsgi --logto /var/log/uwsgi/segfault-uwsgi.log"
    restart: always

  # TODO: - add waits for uwsgi / daphne server to be ready
  #       - more detailed NGINX settings (far later)
  nginx:
    image: nginx
    depends_on:
      - uwsgi
      - daphne
    volumes:
      - ./django/collected_static:/var/www/segfault/static
      - ./nginx/service.template:/etc/nginx/conf.d/service.template
      - ./nginx/log:/var/log/nginx
    networks:
      - backend
    ports:
      - "80:80"
    environment:
      <<: *network-configs
    command: >
      sh -c "envsubst '
              $$UWSGI_HOST  $$UWSGI_PORT
              $$DAPHNE_HOST $$DAPHNE_PORT
              $$NGINX_HOST  $$NGINX_PORT
              ' < /etc/nginx/conf.d/service.template > /etc/nginx/conf.d/default.conf &&
            nginx -g 'daemon off;'"
